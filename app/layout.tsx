import { NextParams } from '@xenopomp/advanced-types';
import type { Metadata, ResolvingMetadata } from 'next';
import { Inter } from 'next/font/google';

import CoreLayout from '@/src/components/layout/CoreLayout/CoreLayout';
import Providers from '@/src/components/layout/Providers/Providers';
import { useEnv } from '@/src/hooks/use-env';
import { generateStaticMetadata } from '@/src/utils/generateStaticMetadata';

import { AppConstants } from './app.constants';
import './globals.scss';

const mainFont = Inter({ subsets: ['latin'] });

export async function generateMetadata(
  slug: { params: NextParams<never>; searchParams: NextParams<never> },
  parent: ResolvingMetadata
): Promise<Metadata> {
  const env = useEnv();

  return generateStaticMetadata({
    title: {
      template: `%s | ${AppConstants.appName}`,
      default: AppConstants.appName,
    },
    description: 'Generated by create next app',
    appleWebApp: {
      title: AppConstants.appName,
      capable: false,
    },
    alternates: {
      canonical: env.getOrThrow('CANONICAL_URL'),
    },
  });
}

export default function RootLayout({
  children,
}: {
  children: React.ReactNode;
}) {
  return (
    <html lang='en'>
      <body className={mainFont.className}>
        <Providers>
          <CoreLayout>{children}</CoreLayout>
        </Providers>
      </body>
    </html>
  );
}
